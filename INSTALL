=== Debian

On Debian systems, the recommended procedure is to use Debian apt on all 
machines

  * apt-get install rq-ruby1.8

which resolves all dependencies, or alternatively 


  * Download the deb file from https://github.com/pjotrp/rq/tree/debian 
  * apt-get install libposixlock-ruby1.8 libsqlite3-ruby1.8 ruby1.8 
  * dpkg --force-architecture -i rq-ruby1.8-ver.deb

on 32-bits and 64-bits systems. The commands

  * rq ~/queue create
  * rq ~/queue status

should show

        jobs: 
          pending: 0
          holding: 0
          running: 0
          finished: 0
          dead: 0
          total: 0
        temporal: {}
        performance: 
          avg_time_per_job: 00h00m00.00s
          n_jobs_in_last_hrs: 
            1: 0
            12: 0
            24: 0
        exit_status: 
          successes: 0
          failures: 0
          ok: 0

=== NFS central

The second option is to build and install once and distribute through
NFS. Use the tgz installation, which includes an ./all/ directory. On 
modern systems your mileage may vary.

  * Unpack rq-ver.tgz file
  
  * cd into ./all/

  * ./install.sh /full/path/to/a/nfs/mounted/directory/

  * the nfs mounted path above should be visible by all cluster nodes.
    __all__ required software will be installed into this directory root. when
    complete all that's needed is a

      export PATH=/full/path/to/a/nfs/mounted/directory/bin:$PATH

    (note 'bin') to use rq

  * this is the second best procedure since it will result in a single nfs
    install which all cluster nodes can use. The other install methods mean
    you will have to install rq on __each__ node you plan to use it on.

=== RUBYGEMS

(currently defunct, awaits updating rq to Ruby 1.9.x)

  * gem install rq

=== STANDARD

(untested in 3.4.1)

  * install all packages in ./depends/packages manually

  * ruby install.rb
